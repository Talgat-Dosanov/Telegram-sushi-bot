
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.callback_data import CallbackData


from utils.db_api.db_commands import count_items, get_categories, get_items, get_subcategories, \
    get_items_with_subcategory

# –°–æ–∑–¥–∞–µ–º Callbackdata - –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–Ω—é
menu_cd = CallbackData('show_menu','level', 'category','subcategory', 'item_id')
buy_item = CallbackData('buy', 'item_id')

# –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–±–µ–∫ –¥–∞—Ç—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–Ω—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
# –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ï—Å–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è, –∏–ª–∏ –∞–π–¥–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã - –æ–Ω–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω—ã –Ω—É–ª—é
def make_callback_data(level, category="0",subcategory="0", item_id="0"):
    return menu_cd.new(level=level, category=category,subcategory=subcategory, item_id=item_id)


# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
async def categories_keyboard():
    # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é - 0
    CURRENT_LEVEL = 0

    # –°–æ–∑–¥–∞–µ–º –ö–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = InlineKeyboardMarkup()

    # –ó–∞–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –†–ê–ó–ù–´–ú–ò –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –Ω–µ–º—É
    categories = await get_categories()
    for category in categories:
        # –ß–µ–∫–∞–µ–º –≤ –±–∞–∑–µ —Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–¥ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        number_of_items = await count_items(category.category_code)

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        button_text = f"{category.category_name}"

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ. –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–∫—É—â–∏–π + 1, –∏ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, category=category.category_code)

        # –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup.insert(
            InlineKeyboardButton(text=button_text, callback_data=callback_data)
        )

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ —Ö–µ–Ω–¥–ª–µ—Ä
    return markup
async def subcategories_keyboard(category):
    # –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å - 1
    CURRENT_LEVEL = 1
    markup = InlineKeyboardMarkup()

    # –ó–∞–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å –†–ê–ó–ù–´–ú–ò –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –Ω–∏–º
    subcategories = await get_subcategories(category)
    for subcategory in subcategories:
        print(subcategory.category_name)
        # –ß–µ–∫–∞–µ–º –≤ –±–∞–∑–µ —Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–¥ –¥–∞–Ω–Ω–æ–π –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        number_of_items = await count_items(category_code=category, subcategory_code=subcategory.subcategory_code)

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        button_text = f"{subcategory.subcategory_name} "

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1,
                                           category=category, subcategory=subcategory.subcategory_code)
        markup.insert(
            InlineKeyboardButton(text=button_text, callback_data=callback_data)
        )
    markup.row(
        InlineKeyboardButton(
            text='‚Ü© –ù–∞–∑–∞–¥',
            callback_data=make_callback_data(
                level=CURRENT_LEVEL - 1,
                category=category,
            )
        )
    )
    return markup
# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏, –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def items_keyboard(category, subcategory):
    if category == 'Sushi':
        CURRENT_LEVEL = 2
    else:
        CURRENT_LEVEL = 1

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é row_width = 1, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∞ —Ç–æ–≤–∞—Ä
    markup = InlineKeyboardMarkup(row_width=2)

    # –ó–∞–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π, –∏ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –Ω–µ–º—É
    if category == 'Sushi':
        items = await get_items_with_subcategory(category, subcategory)
    else:
        items = await get_items(category)
    for item in items:
        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        button_text = f"{item.name} - {item.price} —Ä—É–±."

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        if category == 'Sushi':
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1,
                                               category=category,
                                               subcategory=subcategory,
                                               item_id=item.id)
        else:
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1,
                                               category=category,
                                               item_id=item.id)
        markup.insert(
            InlineKeyboardButton(
                text=button_text,
                callback_data=callback_data
            )
        )

    # –°–æ–∑–¥–∞–µ–º –ö–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É —Ç–∞–∫—É—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
    # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–∞–∑–∞–¥ - –Ω–∞ —É—Ä–æ–≤–µ–Ω—å 1 - –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if category == 'Sushi':
        markup.row(
            InlineKeyboardButton(
                text="‚Ü© –ù–∞–∑–∞–¥",
                callback_data=make_callback_data(level=CURRENT_LEVEL - 1,
                                                 category=category,
                                                 subcategory=subcategory)
            )
        )
    else:
        markup.row(
            InlineKeyboardButton(
                text="‚Ü© –ù–∞–∑–∞–¥",
                callback_data=make_callback_data(level=CURRENT_LEVEL - 1,
                                                 category=category))
        )
    return markup

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–∫—É–ø–∏—Ç—å" –∏ "–Ω–∞–∑–∞–¥" –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞–º–∏
def item_keyboard(category, subcategory, item_id):
    if category == 'Sushi':
        CURRENT_LEVEL = 3
    else:
        CURRENT_LEVEL = 2
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(
            text=f"–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞",
            callback_data=buy_item.new(item_id=item_id)
        )
    )
    if category == 'Sushi':
        markup.row(
            InlineKeyboardButton(
                text="‚Ü© –ù–∞–∑–∞–¥",
                callback_data=make_callback_data(level=CURRENT_LEVEL - 1,
                                                 category=category,
                                                 subcategory=subcategory)))
    else:
        markup.row(
            InlineKeyboardButton(
                text="‚Ü© –ù–∞–∑–∞–¥",
                callback_data=make_callback_data(level=CURRENT_LEVEL - 1,
                                                 category=category
                                                 )))
    return markup

async def menu_keyboards():
    menu_button = KeyboardButton(text='üç¥ –ú–µ–Ω—é')
    cart_button = KeyboardButton(text='üõí –ö–æ—Ä–∑–∏–Ω–∞')
    markup = ReplyKeyboardMarkup(resize_keyboard=True,row_width=2).row(menu_button,cart_button)
    return markup

async def input_keyboard():
    button1 = KeyboardButton('1')
    button2 = KeyboardButton('2')
    button3 = KeyboardButton('3')
    button4 = KeyboardButton('4')
    button5 = KeyboardButton('5')
    button6 = KeyboardButton('6')
    button7 = KeyboardButton('7')
    button8 = KeyboardButton('8')
    button9 = KeyboardButton('9')
    num_keyboard = ReplyKeyboardMarkup(row_width=3).add(
        button1, button2, button3,
        button4, button5, button6,
        button7, button8, button9
    )
    return num_keyboard

async def delivery_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton(
        text='–û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É - 100 —Ä—É–±', callback_data='delivery')

    )
    markup.row(
        InlineKeyboardButton(
            text='–ó–∞–±—Ä–∞—Ç—å —Å–∞–º–æ–º—É', callback_data='phone_number_pickup'
        )
    )
    markup.row(
        InlineKeyboardButton(
            text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑',
            callback_data='cancel'
        )
    )
    return markup

async def shipping_keyboard():
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(
            text='–ü—Ä–∏–Ω—è—Ç—å',
            callback_data='phone'
        )
    )
    markup.row(
        InlineKeyboardButton(
        text='–í–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ',
            callback_data='change_shipping_address'
    )
    )
    return markup
async def phoneNumber_markup():
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton(
            text='–ü—Ä–∏–Ω—è—Ç—å',
            callback_data='pickup'
        )
    )
    markup.row(
        InlineKeyboardButton(
        text='–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
        callback_data='phone'
    )
    )
    return markup
